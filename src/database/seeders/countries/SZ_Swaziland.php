<?php

namespace Lwwcas\LaravelCountries\Database\Seeders\Countries;

use Lwwcas\LaravelCountries\Abstract\CountrySeeder;
use Lwwcas\LaravelCountries\Database\Seeders\Builder;

class SZ_Swaziland extends CountrySeeder
{

    /**
     * Attribute that defines the language of countries
     *
     * @var string
     */
    public ?string $lang = 'en';

    /**
     * Attribute that defines the language of countries
     *
     * @var string
     */
    public ?string $region = 'africa';

    /**
     * Run the database seeds.
     *
     * @return void
     */
    public function run()
    {
        $this->name = 'Swaziland';
        $this->official_name = 'Kingdom of Swaziland';
        $this->iso_alpha_2 = 'SZ';
        $this->iso_alpha_3 = 'SWZ';
        $this->iso_numeric = '748';
        $this->international_phone = '268';

        $this->languages = ['en','ss'];
        $this->tld = ['.sz'];
        $this->wmo = 'SV';
        $this->geoname_id = '934841';

        $this->emoji = [
            'img' => 'ðŸ‡¸ðŸ‡¿',
            'uCode' => 'U+1F1F8 U+1F1FF',
        ];
        $this->color = [
            'hex' => [
                '#3c5eba',
                '#ffd700',
                '#b30404',
                '#000000',
                '#ffffff',
            ],
            'rgb' => [
                '60,94,186',
                '255,215,0',
                '179,4,4',
                '0,0,0',
                '255,255,255',
            ],
        ];
        $this->coordinates = [
            'latitude' => [
                'classic' => '26 30 S',
                'desc' => '-26.565134048461914',
            ],
            'longitude' => [
                'classic' => '31 30 E',
                'desc' => '31.49811363220215',
            ],
        ];
        $this->coordinates_limit = [
            'latitude' => [
                'max' => '-25.783333',
                'min' => '-27.316667',
            ],
            'longitude' => [
                'max' => '32.133333',
                'min' => '30.783333',
            ],
        ];

        $this->geographical = json_decode($this->geographical(), true);

        Builder::country($this);
    }

    public function geographical()
    {
        return '{"type":"FeatureCollection","features":[{"type":"Feature","properties":{"cca2":"sz"},"geometry":{"type":"Polygon","coordinates":[[[30.902048,-26.305254],[30.969444,-26.238335],[31.005554,-26.18417],[31.051109,-26.112782],[31.063889,-26.091393],[31.076942,-26.063057],[31.095554,-26.020836],[31.107777,-25.9925],[31.110802,-25.983261],[31.125275,-25.928337],[31.12833,-25.913891],[31.320553,-25.75528],[31.33083,-25.751392],[31.421665,-25.728336],[31.590832,-25.827503],[31.733887,-25.911392],[31.769951,-25.933033],[31.81361,-25.958889],[31.878052,-25.995556],[31.96851,-25.95784],[31.998608,-25.990837],[32.074715,-26.037224],[32.10083,-26.148613],[32.10305,-26.162224],[32.061104,-26.261391],[32.07222,-26.393333],[32.089165,-26.425003],[32.123055,-26.492226],[32.129166,-26.505836],[32.1325,-26.796669],[32.1334,-26.839626],[32.096664,-26.813057],[32.086105,-26.808891],[32.079994,-26.807781],[32.021683,-26.806095],[32.009491,-26.808064],[31.967777,-27.053059],[31.958611,-27.112782],[31.960546,-27.142929],[31.964722,-27.209446],[31.96833,-27.264168],[31.984951,-27.289452],[31.987499,-27.316113],[31.983608,-27.316669],[31.925278,-27.316391],[31.762218,-27.315556],[31.680553,-27.315002],[31.517498,-27.313057],[31.413609,-27.281113],[31.278288,-27.239218],[31.218887,-27.220837],[31.161663,-27.203056],[31.056942,-27.076946],[30.96833,-26.960835],[30.910553,-26.804447],[30.899443,-26.77195],[30.888332,-26.786667],[30.884998,-26.790836],[30.876389,-26.796391],[30.871387,-26.799168],[30.825554,-26.816391],[30.821941,-26.814724],[30.818886,-26.810558],[30.816666,-26.799168],[30.808846,-26.743587],[30.803608,-26.702503],[30.802498,-26.681114],[30.800278,-26.611946],[30.798332,-26.542778],[30.802219,-26.468391],[30.808609,-26.447224],[30.829441,-26.390835],[30.902048,-26.305254]]]}}]}';
    }
}
