import{_ as s,c as e,a1 as a,o as t}from"./chunks/framework.C72X4JAr.js";const c=JSON.parse('{"title":"Your First Look","description":"","frontmatter":{},"headers":[],"relativePath":"coordinates/first-look.md","filePath":"coordinates/first-look.md"}'),n={name:"coordinates/first-look.md"};function o(l,i,r,p,h,d){return t(),e("div",null,i[0]||(i[0]=[a(`<h1 id="your-first-look" tabindex="-1">Your First Look <a class="header-anchor" href="#your-first-look" aria-label="Permalink to &quot;Your First Look&quot;">​</a></h1><p>The <code>CountryCoordinates::class</code> model gives you access to detailed geographical data of countries. It stores essential information like coordinates, altitude, and other region-specific details, helping you understand the exact location and characteristics of any country in the world.</p><h2 id="key-fields" tabindex="-1">Key Fields <a class="header-anchor" href="#key-fields" aria-label="Permalink to &quot;Key Fields&quot;">​</a></h2><p>Here&#39;s a breakdown of the main fields you&#39;ll find in the <code>CountryCoordinates</code> model:</p><ul><li><p><strong>Latitude</strong>: The geographical latitude of the country.</p><ul><li>Example: <code>&quot;1.3521&quot;</code> for Singapore.</li></ul></li><li><p><strong>Longitude</strong>: The geographical longitude of the country.</p><ul><li>Example: <code>&quot;103.8198&quot;</code> for Singapore.</li></ul></li><li><p><strong>Degrees with Decimal</strong>: The geographical coordinates of the country expressed in decimal degrees.</p><ul><li>Example: <code>&quot;1.3521° N, 103.8198° E&quot;</code> for Singapore.</li></ul></li><li><p><strong>Degrees, Minutes, Seconds (DMS)</strong>: The geographical coordinates of the country expressed in degrees, minutes, and seconds.</p><ul><li>Example: <code>&quot;1°21&#39;8&quot;N, 103°49&#39;11&quot;E&quot;</code> for Singapore.</li></ul></li><li><p><strong>Degrees and Decimal Minutes (DM)</strong>: The geographical coordinates of the country expressed in degrees and decimal minutes.</p><ul><li>Example: <code>&quot;1°21.133&#39;N, 103°49.183&#39;E&quot;</code> for Singapore.</li></ul></li></ul><h2 id="common-queries" tabindex="-1">Common Queries <a class="header-anchor" href="#common-queries" aria-label="Permalink to &quot;Common Queries&quot;">​</a></h2><p>You can retrieve information based on specific attributes like latitude, longitude, or even by using geographical boundaries.</p><p>For example, to find countries located within specific latitude and longitude boundaries, you can do:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Lwwcas\\LaravelCountries\\Models\\CountryCoordinates</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$nearbyCountries </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> CountryCoordinates</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;country&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">whereBetween</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;latitude&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">42.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">whereBetween</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;longitude&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">75.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">73.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>This query will return countries within a specific geographic range.</p><h2 id="using-in-your-application" tabindex="-1">Using in Your Application <a class="header-anchor" href="#using-in-your-application" aria-label="Permalink to &quot;Using in Your Application&quot;">​</a></h2><p>Whether you need detailed coordinates for mapping purposes, or you want to include latitude and region information for geographical context, the <code>CountryCoordinates</code> model makes it easy. You can also extend this data with additional geographical details to fit your application&#39;s needs.</p><p>For example, if you&#39;re building an interactive map or displaying country-specific geographical data, <code>CountryCoordinates</code> provides all the tools you need to make this possible.</p>`,13)]))}const u=s(n,[["render",o]]);export{c as __pageData,u as default};
